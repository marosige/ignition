#!/bin/bash

# Check for dependencies
if ! command -v yt-dlp &> /dev/null; then
    echo "Error: yt-dlp is not installed. Install it using 'brew install yt-dlp'."
    exit 1
fi

if ! command -v ffmpeg &> /dev/null; then
    echo "Error: ffmpeg is not installed. Install it using 'brew install ffmpeg'."
    exit 1
fi

# Usage message
usage() {
    echo ""
    echo "Usage: youtube-download <YouTube_URL>"
    echo ""
    echo "This script downloads audio from YouTube or YouTube Music."
    echo ""
    echo "File names:"
    echo "  - YouTube video: 'Video Title.mp3'"
    echo "  - YouTube playlist: 'Playlist Title/001 - Video Title.mp3', '002 - Video Title.mp3', etc."
    echo "  - YouTube Music track: 'Track Title.mp3'"
    echo "  - YouTube Music playlist: 'Artist - Release Date - Album Name/001 - Track Title.mp3', '002 - Track Title.mp3', etc."
    echo ""
    exit 1
}

# Get URL
YT_URL="$1"
if [[ -z "$YT_URL" ]]; then
    echo "Error: No URL provided."
    usage
fi

# Detect if URL is a playlist (YouTube or YouTube Music)
if [[ "$YT_URL" == *"playlist?list="* ]]; then
    if [[ "$YT_URL" == *"music.youtube.com"* ]]; then
        # For YouTube Music playlists, use artist, album release date, and album name
        OUT_TEMPLATE="%(artist)s - %(release_date)s - %(album)s/%(playlist_index)03d - %(title)s.%(ext)s"
    else
        # For regular YouTube playlists, use the playlist title for the folder name
        OUT_TEMPLATE="%(playlist_title)s/%(playlist_index)03d - %(title)s.%(ext)s"
    fi
else
    OUT_TEMPLATE="%(title)s.%(ext)s"
fi

# Download the best audio and convert it to MP3
yt-dlp \
    -f bestaudio \
    --extract-audio \
    --audio-format mp3 \
    --output "$OUT_TEMPLATE" \
    "$YT_URL"

echo "Download complete!"